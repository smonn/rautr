var Router=function(t,n){function e(){}function i(t,n,e){t.addEventListener?t.addEventListener(n,e):t.attachEvent(v+n,e)}function o(t,n,e){t.removeEventListener?t.removeEventListener(n,e):t.detachEvent(v+n,e)}function r(n){var e=t.createElement("a");return e.href=n,n=e.hash}function s(t,n){var e,i=t.length;for(e=0;e<i;e+=1)if(t[e]===n)return e;return d}function u(t,n){var e,i=t.length;for(e=0;e<i;e+=1)n(t[e],e)}function h(t,n){var e=[];return u(t,function(t,i){n(t,i)&&e.push(t)}),e}function a(t,n){return function(){return n.apply(t,arguments)}}function c(t,n,i){this.path=r(t),this.enter=n||e,this.exit=i||e}function f(){this.routes=[],this.lastURL=t.URL,this._dispatch=a(this,this._dispatch),i(n,p,this._dispatch)}var p="hashchange",v="on",d=-1,m=function(){return n.requestAnimationFrame||n.webkitRequestAnimationFrame||n.mozRequestAnimationFrame||function(t){n.setTimeout(t,1e3/60)}}();if(c.prototype.isMatch=function(t){return(t=r(t))===this.path},f.prototype.dispose=function(){this.routes=[],o(n,p,this._dispatch)},f.prototype._dispatch=function(){var n=t.URL,e=this.lastURL,i=h(this.routes,function(t){return t.isMatch(e)}),o=h(this.routes,function(t){return t.isMatch(n)});u(i,function(t){m(t.exit)}),u(o,function(t){m(t.enter)}),this.lastURL=n},f.prototype.add=function(t,n,e){var i=new c(t,n,e);return this.routes.push(i),i},f.prototype.remove=function(t){var n=s(this.routes,t);n>d&&this.routes.splice(n,1)},f.prototype.get=function(){return r(n.location.hash)},f.prototype.set=function(t){m(function(){n.location.hash=r(t)})},"undefined"==typeof n.onhashchange)throw new Error("HashChange event not supported by this browser.");return f}(document,window);
//# sourceMappingURL=router.min.js.map